# Generated by Django 5.0.2 on 2025-03-12 12:57

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Cabinet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(help_text='Обязательное поле.', max_length=20, verbose_name='Номер')),
            ],
            options={
                'verbose_name': 'Кабинет',
                'verbose_name_plural': 'Кабинеты',
                'db_table': 'cabinet',
                'db_table_comment': 'Таблица для хранения информации о кабинетах.',
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Обязательное поле.', max_length=30, verbose_name='Наименование отдела')),
            ],
            options={
                'verbose_name': 'Отдел',
                'verbose_name_plural': 'Отделы',
                'db_table': 'department',
                'db_table_comment': 'Таблица для хранения информации об отделах.',
            },
        ),
        migrations.CreateModel(
            name='InventoryNumber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=20, unique=True, verbose_name='Инвентарный номер')),
            ],
            options={
                'verbose_name': 'Инвентарный номер',
                'verbose_name_plural': 'Инвентарные номера',
                'db_table': 'inventory_number',
                'db_table_comment': 'Таблица для хранения информации об инвентарных номерах.',
            },
        ),
        migrations.CreateModel(
            name='IPAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.GenericIPAddressField(default='0.0.0.0', help_text='Обязательное поле.', unique=True, verbose_name='Адрес')),
            ],
            options={
                'verbose_name': 'IP-адрес',
                'verbose_name_plural': 'IP-адреса',
                'db_table': 'ip_address',
                'db_table_comment': 'Таблица для хранения информации о IP-адресах.',
            },
        ),
        migrations.CreateModel(
            name='PrinterModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Обязательное поле.', max_length=30, verbose_name='Модель принтера')),
            ],
            options={
                'verbose_name': 'Модель принтера',
                'verbose_name_plural': 'Модели принтеров',
                'db_table': 'printer_model',
                'db_table_comment': 'Таблица для хранения информации о моделях принтеров.',
            },
        ),
        migrations.CreateModel(
            name='PrinterStamp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Обязательное поле.', max_length=30, verbose_name='Производитель принтера')),
            ],
            options={
                'verbose_name': 'Производитель принтера',
                'verbose_name_plural': 'Производители принтеров',
                'db_table': 'printer_stamp',
                'db_table_comment': 'Таблица для хранения информации о производителях принтеров.',
            },
        ),
        migrations.CreateModel(
            name='Subnet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Обязательное поле.', max_length=100, verbose_name='Наименование подсети')),
                ('address', models.GenericIPAddressField(default='0.0.0.0', help_text='Обязательное поле.', unique=True, verbose_name='Адрес')),
                ('mask', models.IntegerField(help_text='Обязательное поле. Необходимо вводить префикс.', verbose_name='Маска')),
            ],
            options={
                'verbose_name': 'Подсеть',
                'verbose_name_plural': 'Подсети',
                'db_table': 'subnet',
                'db_table_comment': 'Таблица для хранения информации о подсетях.',
            },
        ),
        migrations.CreateModel(
            name='SupplyItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Обязательное поле.', max_length=40, verbose_name='Наименование расходного материала')),
                ('type', models.CharField(choices=[('drum_unit', 'фотобарабан'), ('cartridge', 'картридж')], default='cartridge', help_text='Обязательное поле.', max_length=20, verbose_name='Тип')),
                ('color', models.CharField(choices=[('black', 'черный'), ('cyan', 'голубой'), ('magenta', 'пурпурный'), ('yellow', 'желтый')], default='black', help_text='Обязательное поле.', max_length=10, verbose_name='Цвет')),
                ('price', models.DecimalField(decimal_places=2, help_text='Обязательное поле.', max_digits=10, verbose_name='Цена за единицу, руб.')),
            ],
            options={
                'verbose_name': 'Расходный материал',
                'verbose_name_plural': 'Расходные материалы',
                'db_table': 'supply_item',
                'db_table_comment': 'Таблица для хранения информации о расходных материалах.',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cabinet', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='monitoring.cabinet', verbose_name='Номер кабинета')),
                ('department', models.ForeignKey(help_text='Обязательное поле.', on_delete=django.db.models.deletion.CASCADE, to='monitoring.department', verbose_name='Наименование отдела')),
            ],
            options={
                'verbose_name': 'Расположение',
                'verbose_name_plural': 'Расположение',
                'db_table': 'location',
                'db_table_comment': 'Таблица для хранения информации о расположении.',
            },
        ),
        migrations.CreateModel(
            name='Printer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial_number', models.CharField(help_text='Обязательное поле.', max_length=20, verbose_name='Серийный номер')),
                ('date_of_commission', models.DateField(default=django.utils.timezone.now, help_text='Обязательное поле.', verbose_name='Дата ввода в эксплуатацию')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активность')),
                ('is_archived', models.BooleanField(default=False, verbose_name='В архиве')),
                ('comment', models.TextField(blank=True, help_text='Поле для ввода дополнительной информации о принтере.', null=True, verbose_name='Комментарий')),
                ('inventory_number', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='monitoring.inventorynumber', verbose_name='Инвентарный номер')),
                ('ip_address', models.OneToOneField(help_text='Обязательное поле.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='monitoring.ipaddress', verbose_name='IP-адрес')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='monitoring.location', verbose_name='Расположение')),
                ('model', models.ForeignKey(help_text='Обязательное поле.', on_delete=django.db.models.deletion.CASCADE, to='monitoring.printermodel', verbose_name='Наименование принтера')),
            ],
            options={
                'verbose_name': 'Принтер',
                'verbose_name_plural': 'Принтеры',
                'db_table': 'printer',
                'db_table_comment': 'Таблица для хранения информации о принтерах.',
            },
        ),
        migrations.CreateModel(
            name='MonthlyStat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page', models.IntegerField()),
                ('print', models.IntegerField()),
                ('copies', models.IntegerField(blank=True, null=True)),
                ('scan', models.IntegerField(blank=True, null=True)),
                ('time_collect', models.DateTimeField(default=django.utils.timezone.now)),
                ('printer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='monitoring.printer')),
            ],
            options={
                'verbose_name': 'Ежемесячная статистика',
                'verbose_name_plural': 'Ежемесячная статистика',
                'db_table': 'monthly_statistics',
                'db_table_comment': 'Таблица для хранения информации о ежемесячной статистике использования принтеров.',
            },
        ),
        migrations.CreateModel(
            name='MaintenanceCosts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paper_cost', models.FloatField()),
                ('supplies_cost', models.FloatField()),
                ('printer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='monitoring.printer')),
            ],
            options={
                'db_table': 'maintenance_costs',
                'db_table_comment': 'Таблица для хранения информации о прогнозе затрат.',
            },
        ),
        migrations.CreateModel(
            name='ForecastStat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('copies_printing', models.IntegerField()),
                ('time_collect', models.DateField(default=django.utils.timezone.now)),
                ('printer', models.ForeignKey(help_text='Обязательное поле.', on_delete=django.db.models.deletion.CASCADE, to='monitoring.printer', verbose_name='Принтер')),
            ],
            options={
                'db_table': 'forecast_statistics',
                'db_table_comment': 'Таблица для хранения информации о статистике для подготовки прогноза.',
            },
        ),
        migrations.CreateModel(
            name='Forecast',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qty_pages', models.IntegerField()),
                ('daily_pages', models.IntegerField()),
                ('forecast_date', models.DateField()),
                ('printer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='monitoring.printer')),
            ],
            options={
                'db_table': 'forecast',
                'db_table_comment': 'Таблица для хранения информации о прогнозе печати.',
            },
        ),
        migrations.CreateModel(
            name='DailyStat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page', models.IntegerField()),
                ('print', models.IntegerField()),
                ('copies', models.IntegerField(blank=True, null=True)),
                ('scan', models.IntegerField(blank=True, null=True)),
                ('time_collect', models.DateTimeField(default=django.utils.timezone.now)),
                ('printer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='monitoring.printer')),
            ],
            options={
                'verbose_name': 'Ежедневная статистика',
                'verbose_name_plural': 'Ежедневная статистика',
                'db_table': 'daily_statistics',
                'db_table_comment': 'Таблица для хранения информации о ежедневной статистике использования принтеров.',
            },
        ),
        migrations.CreateModel(
            name='PrinterError',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('description', models.TextField()),
                ('printer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='monitoring.printer')),
            ],
            options={
                'verbose_name': 'Ошибка принтера',
                'verbose_name_plural': 'Ошибки принтеров',
                'db_table': 'printer_error',
                'db_table_comment': 'Таблица для хранения информации о cобытиях ошибка принтера.',
            },
        ),
        migrations.AddField(
            model_name='printermodel',
            name='stamp',
            field=models.ForeignKey(help_text='Обязательное поле.', on_delete=django.db.models.deletion.CASCADE, to='monitoring.printerstamp', verbose_name='Марка принтера'),
        ),
        migrations.CreateModel(
            name='Statistics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page', models.IntegerField()),
                ('print', models.IntegerField()),
                ('copies', models.IntegerField(blank=True, null=True)),
                ('scan', models.IntegerField(blank=True, null=True)),
                ('time_collect', models.DateTimeField(default=django.utils.timezone.now)),
                ('printer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='monitoring.printer')),
            ],
            options={
                'verbose_name': 'Статистика',
                'verbose_name_plural': 'Статистика',
                'db_table': 'statistics',
                'db_table_comment': 'Таблица для хранения информации о статистике использования принтеров.',
            },
        ),
        migrations.AddField(
            model_name='ipaddress',
            name='subnet',
            field=models.ForeignKey(help_text='Обязательное поле.', on_delete=django.db.models.deletion.CASCADE, to='monitoring.subnet', verbose_name='Подсеть'),
        ),
        migrations.CreateModel(
            name='SupplyDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qty', models.IntegerField(help_text='Обязательное поле.', verbose_name='Количество')),
                ('supply', models.ForeignKey(help_text='Обязательное поле.', on_delete=django.db.models.deletion.CASCADE, to='monitoring.supplyitem', verbose_name='Расходный материал')),
            ],
            options={
                'verbose_name': 'Остаток расходного материала на складе',
                'verbose_name_plural': 'Остатки расходных материалов на складе',
                'db_table': 'supply_details',
                'db_table_comment': 'Таблица для хранения информации об остатках расходных материалов на складе',
            },
        ),
        migrations.CreateModel(
            name='PrinterSupplyStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('remaining_supply_percentage', models.IntegerField(blank=True, help_text='Обязательное поле.', null=True, verbose_name='Остаток расходного материала, %')),
                ('consumption', models.IntegerField(blank=True, help_text='Обязательное поле.', null=True, verbose_name='Cредний расход материала, кол-во страниц')),
                ('printer', models.ForeignKey(help_text='Обязательное поле.', on_delete=django.db.models.deletion.CASCADE, to='monitoring.printer', verbose_name='Принтер')),
                ('supply', models.ForeignKey(help_text='Обязательное поле.', on_delete=django.db.models.deletion.CASCADE, to='monitoring.supplyitem', verbose_name='Расходный материал')),
            ],
            options={
                'verbose_name': 'Статус расходного материала для принтера',
                'verbose_name_plural': 'Статус расходного материала для принтера',
                'db_table': 'printer_supply_status',
                'db_table_comment': 'Таблица для хранения информации о статусе расходных материалов для принтеров',
            },
        ),
        migrations.AddField(
            model_name='printer',
            name='supplies',
            field=models.ManyToManyField(related_name='printer', through='monitoring.PrinterSupplyStatus', to='monitoring.supplyitem'),
        ),
        migrations.CreateModel(
            name='ForecastChangeSupplies',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('forecast_date', models.DateField()),
                ('printer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='monitoring.printer')),
                ('supply', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='monitoring.supplyitem')),
            ],
            options={
                'db_table': 'forecast_change_supplies',
                'db_table_comment': 'Таблица для хранения информации о прогнозе замены расходных материалов.',
            },
        ),
        migrations.CreateModel(
            name='ChangeSupply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_change', models.DateTimeField(default=django.utils.timezone.now)),
                ('printer', models.ForeignKey(help_text='Обязательное поле.', on_delete=django.db.models.deletion.CASCADE, to='monitoring.printer', verbose_name='Принтер')),
                ('supply', models.ForeignKey(help_text='Обязательное поле.', on_delete=django.db.models.deletion.CASCADE, to='monitoring.supplyitem', verbose_name='Расходный материал')),
            ],
            options={
                'verbose_name': 'Замена расходных материалов',
                'verbose_name_plural': 'Замена расходных материалов',
                'db_table': 'change_supply',
                'db_table_comment': 'Таблица для хранения информации о событиях замены расходных материалов.',
            },
        ),
        migrations.AlterUniqueTogether(
            name='ipaddress',
            unique_together={('address',)},
        ),
    ]
